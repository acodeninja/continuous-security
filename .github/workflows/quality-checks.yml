name: quality checks

on:
  push:
    branches:
      - main
      - development
  pull_request:

concurrency:
  group: quality-checks-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  pull-request:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: check and correct pull request
        uses: actions/github-script@v6
        with:
          script: |
            const {owner, repo} = context.repo;
            const pull_number = context.payload.pull_request.number;
            
            const pr = await github.rest.pulls.get({owner, repo, pull_number});
            console.log(JSON.stringify([{owner, repo, pull_number}, pr], null, 2));
            
            // Checking you are using the right target.
            if (pr.base.ref === 'main' && pr.head.ref !== 'development') {
              console.log(`Attempting to merge ${pr.head.ref} into main, switching target to development.`);
              await github.rest.pulls.update({owner, repo, pull_number, base: 'development'});
              pr.base.ref = 'development';
            }
            
            // Checking you've given your PR the right name.
            if (pr.base.ref === 'development') {
              if (!['feat: ', 'fix: ', 'chore: '].some(t => pr.title.startsWith(t))) {
                throw new Error('Pull request title must start with feat:, fix: or chore:');
              }
            }

  application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: application/package-lock.json
      - run: npm ci
        working-directory: application/
      - run: npm audit
        working-directory: application/
      - run: npm run lint
        working-directory: application/
      - run: npm test
        working-directory: application/

  enumerate-scanners:
    name: scanner / enumerate
    runs-on: ubuntu-latest
    outputs:
      scanners: ${{ steps.scanners.outputs.scanners }}
    steps:
      - uses: actions/checkout@v3
      - id: scanners
        run: echo "scanners=$(ls -1 ./scanners | jq -Rnrc '[inputs] | map(select(. != "_base"))')" >> $GITHUB_OUTPUT

  scanners:
    name: scanner / ${{ matrix.scanner }}
    runs-on: ubuntu-latest
    needs: [ enumerate-scanners ]
    strategy:
      matrix:
        scanner: ${{ fromJSON(needs.enumerate-scanners.outputs.scanners) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: scanners/${{ matrix.scanner }}/package-lock.json
      - name: install
        run: npm ci
        working-directory: scanners/${{ matrix.scanner }}/
      - name: audit
        run: npm audit
        working-directory: scanners/${{ matrix.scanner }}/
      - name: lint
        run: npm run lint
        working-directory: scanners/${{ matrix.scanner }}/
      - name: unit test
        run: npm test
        working-directory: scanners/${{ matrix.scanner }}/
      - name: integration test
        run: npm run test:integration --if-present
        working-directory: scanners/${{ matrix.scanner }}/
